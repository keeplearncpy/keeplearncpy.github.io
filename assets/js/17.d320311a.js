(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{732:function(s,t,a){"use strict";a.r(t);var n=a(5),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[s._v("说明")]),s._v(" "),a("p",[s._v("这是git的摘要内容，主要包括git的使用命令，git的分支管理，git的合并代码等")])]),s._v(" "),a("h2",{attrs:{id:"git-使用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-使用命令"}},[s._v("#")]),s._v(" git 使用命令")]),s._v(" "),a("h3",{attrs:{id:"_1-基本命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本命令"}},[s._v("#")]),s._v(" 1.基本命令")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("git add "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\ngit commit "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("m "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"描述"')]),s._v("                                                提交到本地\ngit push origin "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("远端仓库名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("                                        推送到远端\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"_2-合并代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-合并代码"}},[s._v("#")]),s._v(" 2.合并代码")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("合并代码之前一定先要pull代码（从远端的分支拉取代码到本地）\n然后会自动合并代码，遇见代码冲突就手动解决\ngit pull origin "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("远端分支"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n手动合并\ngit commit "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("m "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'合并代码'")]),s._v("\ngit push origin "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("推送到目标分支"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("将合并后的代码提交到你自己的远程分支上"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"_3-如何新建分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-如何新建分支"}},[s._v("#")]),s._v(" 3.如何新建分支")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("git checkout "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("b "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("分支名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  新建分支并且切换到新的分支\ngit push origin "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("新的分支名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  远端新建分支\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);